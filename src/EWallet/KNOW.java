/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package EWallet;

/**
 *
 * @author SATYAM
 */
public class KNOW extends javax.swing.JFrame {

    /**
     * Creates new form KNOW
     */
    public KNOW() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jList1 = new javax.swing.JList<>();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("KNOW ABOUT YOUR WALLET");

        jList1.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "DESCRIPTION", "E-wallet is an online prepaid account where one can stock money, to be used when required. As it is a", "pre-loaded facility, consumers can buy a range of products from airline tickets to grocery without", "swiping a debit or credit card.", " ", " ", " ", " ", " ", " ", " ", "LOAD E-WALLET", " ", " ", "Customer loads his wallet via Credit/Debit card, Net Banking, IMPS or ATM card. The money is", "deposited with the Escrow bank (this is to ensure EMS does not cheat its customers).", "Each Wallet is of two types:", "• Minimum KYC Wallet: Minimum KYC wallet customers have to verify their mobile numbers", "and email (optional). Minimum KYC wallet customers can add a maximum of Rs 10,000 in a", "calendar month in their wallet. They can send money to other e-wallet customers not exceeding", "Rs 25,000 in a calendar month. They can also send money from their e-wallet to any bank", "account not exceeding Rs 25,000 in a calendar month. The total amount of of money that can be", "sent to another e-wallet customer and to a bank account can not exceed Rs 25,000 in a calendar", "month.", "• Full KYC Wallet: Full KYC Wallet customers can hold a maximum amount of Rs 100,000 in", "their e-wallets at any point in time. There is no limit to the amount of money that can be added", "in a Full KYC e-Wallet as long as the total amount in the e-wallet does not exceed Rs 100,000.", "This means that Full KYC Wallet customers can spend much more than Minimum KYC Wallet", "customers and can also receive more cashback without crossing their wallet’s monthly limits.", "Full KYC Wallet customers can send money to other e-wallet customers not exceeding Rs", "25,000 in a calendar month. They can also send money from their e-wallet to any bank account", "not exceeding Rs 25,000 in a calendar month. The total amount of of money that can be sent to", "another e-wallet customer and to a bank account can not exceed Rs 25,000 in a calendar month.", " ", " ", " ", " ", " ", " ", " ", "PAYMENT TRANSFER", " ", " ", "P2P transaction", "1. Merchant shares his number with customer or the customer scans the merchant's code.", "2. Customer transfers the money to the merchant's wallet in accordance with the KYC", "status of the merchant.", "2. P2M transaction", "1. The merchant registers with the Escrow Bank.", "2. e-wallet Data Center collects KYC documents and bank details of the merchant and", "registers merchant with the Escrow Bank.", "3. When customer pays merchant, customer's wallet is debited and a notification is sent to", "Escrow bank.", "4. The escrow bank then transfers this money into the bank account of merchant registered", "with it", " ", "P2M transaction", "1. The merchant registers with the Escrow Bank.", "2. e-wallet Data Center collects KYC documents and bank details of the merchant and", "registers merchant with the Escrow Bank.", "3. When customer pays merchant, customer's wallet is debited and a notification is sent to", "Escrow bank.", "4. The escrow bank then transfers this money into the bank account of merchant registered", "with it.", " ", " ", " ", " ", " ", " ", " ", " ", "TRANSFER MONEY FROM E-WALLET TO BANK ACCOUNT", " ", "1. Log in to EMS.", "2. Select `Send' option.", "3. Select `Send to Bank' option.", "4. Enter the Name you want to give to this beneficiary.", "5. Enter the account number.", "6. Enter the IFSC code of the branch. You can select the IFSC code from a dropdown.", "7. Enter the amount you want to send. Minimum amount should be Rs xxx.", "8. You can also enter the reason for sending money, however this is optional.", "9. Select Send. Your money will be successfully transferred to the bank account.", " ", " ", " ", " ", " ", " ", " ", " ", "SOME OTHER OPERATIONS OF THE EMS", " ", "• View Passbook: Shows e-wallet balance.", "• Upgrade Wallet: Wallets can be upgraded from minimum KYC to full KYC by providing full", "KYC details to the e-wallet Data Center." };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jScrollPane1.setViewportView(jList1);

        jButton1.setText("BACK");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(33, 33, 33)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 280, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(25, 25, 25)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 301, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(117, 117, 117)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(28, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, 26, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(26, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(24, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        dispose();        // TODO add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(KNOW.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(KNOW.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(KNOW.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(KNOW.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new KNOW().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JList<String> jList1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
